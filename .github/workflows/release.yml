name: stable
on: 
  workflow_dispatch:
    inputs:
      is_prerelease:
        description: "is this release a pre-release?"
        required: false
        default: false
        type: boolean 

      version: 
        type: string
        required: true
        description: 'Version number without "v" Eg: 0.12.2'

jobs:
  windows_x86_64:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: mingw-w64-x86_64-gcc mingw-w64-x86_64-glfw mingw-w64-x86_64-libtre-git mingw-w64-x86_64-libpng scons make git

      - name: Build Goxel
        run: |
          make release
          mv goxel2.exe goxel2-x86_64.exe

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: win_x86_64_binary
          path: goxel2-x86_64.exe
          if-no-files-found: error

  windows_i686:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: mingw-w64-i686-gcc mingw-w64-i686-glfw mingw-w64-i686-libtre-git mingw-w64-i686-libpng scons make

      - name: Build Goxel
        run: |
          export PATH=/mingw32/bin/:$PATH
          make release
          mv goxel2.exe goxel2-i686.exe

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: win_i686_binary
          path: goxel2-i686.exe
          if-no-files-found: error

  linux_x86_64:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Install GLFW3, PKG Config, Git, Gtk3-dev, LibPNG & SCONS
      run: |
        sudo apt-get install libglfw3-dev pkg-config git libgtk-3-dev libpng-dev libpng16-16 scons

    - name: Build Goxel
      run: make release

    - name: Strip Debug Info & Change FileName
      run: strip ./goxel2 && mv ./goxel2 ./goxel2-x86_64.elf

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: linux_x86_64_binary
        path: goxel2-x86_64.elf
        if-no-files-found: error

  linux_i686:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Setup Ubuntu 18.04 x86 & Build
      uses: paulproteus/ubuntu-18.04-x86@0.1
      with:
        command: apt-get update -y && apt-get install -y libglfw3-dev pkg-config git libgtk-3-dev libpng-dev libpng16-16 scons && make release && ls

    - name: Strip Debug Info & Change FileName
      run: strip ./goxel2 && mv ./goxel2 ./goxel2-i686.elf

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: linux_i686_binary
        path: goxel2-i686.elf
        if-no-files-found: error

  osx_x86_64:
    runs-on: macos-11
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Install scons, dylibbundler, glfw3 & tre
      run: brew install scons dylibbundler glfw tre

    - name: Build
      run: make release

    - name: Generate .icns
      run: |
        mkdir goxel2.iconset
        sips -z 16 16     icon.png --out goxel2.iconset/icon_16x16.png
        sips -z 32 32     icon.png --out goxel2.iconset/icon_16x16@2x.png
        sips -z 32 32     icon.png --out goxel2.iconset/icon_32x32.png
        sips -z 64 64     icon.png --out goxel2.iconset/icon_32x32@2x.png
        sips -z 128 128   icon.png --out goxel2.iconset/icon_128x128.png
        sips -z 256 256   icon.png --out goxel2.iconset/icon_128x128@2x.png
        sips -z 256 256   icon.png --out goxel2.iconset/icon_256x256.png
        sips -z 512 512   icon.png --out goxel2.iconset/icon_256x256@2x.png
        sips -z 512 512   icon.png --out goxel2.iconset/icon_512x512.png
        cp icon.png goxel2.iconset/icon_512x512@2x.png
        iconutil -c icns -o goxel2.icns goxel2.iconset
        rm -R goxel2.iconset

    - name: Create Apple Bundle
      run: |
        mkdir goxel2.app
        mkdir goxel2.app/Contents
        mkdir goxel2.app/Contents/libs
        mkdir goxel2.app/Contents/MacOS
        mkdir goxel2.app/Contents/Resources
        cp ./goxel2 ./goxel2.app/Contents/MacOS/
        cp ./goxel2.icns ./goxel2.app/Contents/Resources/goxel2.icns
        cp ./data/Info.plist ./goxel2.app/Contents/

    - name: Put Dylibs
      run: |
        dylibbundler -od -b -ns -x ./goxel2.app/Contents/MacOS/goxel2 -d ./goxel2.app/Contents/libs/

    - name: Create Zip
      run: zip -r goxel2-osx.zip ./goxel2.app

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: osx_binary
        path: ./goxel2-osx.zip
        if-no-files-found: error

  Create-Release:
    needs: [linux_x86_64, linux_i686, osx_x86_64, windows_x86_64, windows_i686]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Clean previous binaries
      run: rm -f goxel2-linux.elf goxel2-win32.exe goxel2-osx.zip

    - name: Download Linux build artifacts
      uses: actions/download-artifact@v2
      with:
        name: win_x86_64_binary

    - name: Download Linux build artifacts
      uses: actions/download-artifact@v2
      with:
        name: win_i686_binary

    - name: Download Linux build artifacts
      uses: actions/download-artifact@v2
      with:
        name: linux_x86_64_binary

    - name: Download Linux build artifacts
      uses: actions/download-artifact@v2
      with:
        name: linux_i686_binary

    - name: Download OSX build artifacts
      uses: actions/download-artifact@v2
      with:
        name: osx_binary

    - name: Update/Create Release
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "v${{github.event.inputs.version}}"
        prerelease: ${{github.event.inputs.is_prerelease}}
        title: "Goxel2 v${{github.event.inputs.version}}"
        files: |
          goxel2-x86_64.exe
          goxel2-i686.exe
          goxel2-x86_64.elf
          goxel2-i686.elf
          goxel2-osx.zip

