name: Create release
on: 
  workflow_dispatch:
    inputs: 
      version: 
        type: text
        description: 'Version number Eg: 4.2.0' 

jobs:
  Build-For-Windows:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v2
      - uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: mingw-w64-x86_64-gcc mingw-w64-x86_64-glfw mingw-w64-x86_64-libtre-git scons make git

      - name: Build Goxel
        run: |
          make release
          mv goxel2.exe goxel2-win32.exe

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: win_binary
          path: goxel2-win32.exe
          if-no-files-found: error

  Build-For-Linux:
    runs-on: ubuntu-latest
    steps:
    - name: Check out
      uses: actions/checkout@v2

    - name: Install GLFW3, PKG Config, Git, Gtk3 & SCONS
      run: |
        sudo apt-get install libglfw3-dev pkg-config git libgtk-3-dev scons

    - name: Build Goxel
      run: make release

    - name: Strip Debug Info & Change FileName
      run: strip ./goxel2 && mv ./goxel2 ./goxel2-linux.elf

    - name: Publish AUR package
      uses: KSXGitHub/github-actions-deploy-aur@<TAG>
      with:
        pkgname: goxel2-git
        pkgbuild: ./scripts/arch/PKGBUILD
        commit_username: ${{ secrets.AUR_USERNAME }}
        commit_email: ${{ secrets.AUR_EMAIL }}
        ssh_private_key: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
        commit_message: Update AUR package
        ssh_keyscan_types: rsa,dsa,ecdsa,ed25519

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: linux_binary
        path: goxel2-linux.elf
        if-no-files-found: error


  Build-For-OSX:
    runs-on: macos-11
    steps:
    - name: Check out
      uses: actions/checkout@v2

    - name: Build Goxel
      run: cd osx/goxel && xcodebuild -configuration "Release" -destination 'platform=macOS' build CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO && cd ../..

    - name: Create Zip
      run: cd ./osx/goxel/build/Release/ && zip -r ../../../../goxel2-osx.zip ./goxel.app

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: osx_binary
        path: ./goxel2-osx.zip
        if-no-files-found: error

  Create-Release:
    needs: [Build-For-Linux, Build-For-OSX, Build-For-Windows]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Clean previous binaries
      run: rm -f goxel2-linux.elf goxel2-win32.exe goxel2-osx.zip

    - name: Download Linux build artifacts
      uses: actions/download-artifact@v2
      with:
        name: linux_binary

    - name: Download Linux build artifacts
      uses: actions/download-artifact@v2
      with:
        name: win_binary

    - name: Download OSX build artifacts
      uses: actions/download-artifact@v2
      with:
        name: osx_binary

    - name: Update/Create Continous Release
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "v${{github.event.inputs.version}}"
        prerelease: false
        title: "Goxel v${{github.event.inputs.version}}"
        files: |
          goxel2-win32.exe
          goxel2-linux.elf
          goxel2-osx.zip
